Q1)
#include <stdio.h>

int main() {
    int n, i, j, temp;
    printf("Enter the number of processes: ");
    scanf("%d", &n);

    int at[n], bt[n], pr[n], start_time[n], end_time[n], wait_time[n], turnaround_time[n];
    for(i = 0; i < n; i++) {
        printf("Enter arrival time and burst time for process %d: ", i + 1);
        scanf("%d %d", &at[i], &bt[i]);
        pr[i] = i + 1;
    }

    for(i = 0; i < n-1; i++) {
        for(j = i+1; j < n; j++) {
            if(at[i] > at[j]) {
                temp = at[i]; at[i] = at[j]; at[j] = temp;
                temp = bt[i]; bt[i] = bt[j]; bt[j] = temp;
                temp = pr[i]; pr[i] = pr[j]; pr[j] = temp;
            }
        }
    }

    int time = 0, completed = 0;
    int processed[n]; for(i=0;i<n;i++) processed[i]=0;
    printf("\nProcess | Arrival | Burst | Start | End | Waiting | Turnaround\n");

    while(completed < n) {
        int idx = -1, min_bt = 100000;
        for(i = 0; i < n; i++) {
            if(at[i] <= time && !processed[i] && bt[i] < min_bt) {
                min_bt = bt[i];
                idx = i;
            }
        }

        if(idx == -1) {
            time++;
            continue;
        }

        start_time[idx] = time;
        end_time[idx] = time + bt[idx];
        wait_time[idx] = start_time[idx] - at[idx];
        turnaround_time[idx] = end_time[idx] - at[idx];
        time += bt[idx];
        processed[idx] = 1;
        completed++;

        printf("%7d | %7d | %5d | %5d | %3d | %7d | %10d\n",
               pr[idx], at[idx], bt[idx], start_time[idx], end_time[idx], wait_time[idx], turnaround_time[idx]);
    }

    float total_wait = 0, total_turn = 0;
    for(i=0; i<n; i++) {
        total_wait += wait_time[i];
        total_turn += turnaround_time[i];
    }

    printf("\nAverage waiting time: %.2f\n", total_wait/n);
    printf("Average turnaround time: %.2f\n", total_turn/n);

    return 0;
}


Q2)
#include<stdio.h>
int main()
{
            int at[10],bt[10],pr[10];
            int n,i,j,temp,time=0,count,over=0,sum_wait=0,sum_turnaround=0,start;
            float avgwait,avgturn;
            printf("Enter the number of processes\n");
            scanf("%d",&n);
            for(i=0;i<n;i++)
            {
                        printf("Enter the arrival time and execution time for process %d\n",i+1);
                        scanf("%d%d",&at[i],&bt[i]);
                        pr[i]=i+1;
            }
            for(i=0;i<n-1;i++)
            {
                        for(j=i+1;j<n;j++)
                        {
                                    if(at[i]>at[j])
                                    {
                                                temp=at[i];
                                                at[i]=at[j];
                                                at[j]=temp;
                                                
                                                temp=bt[i];
                                                bt[i]=bt[j];
                                                bt[j]=temp;
                                                
                                                temp=pr[i];
                                                pr[i]=pr[j];
                                                pr[j]=temp;     
                                    }
                        
                        }
            }
            printf("\n\nProcess\t|Arrival time\t|Execution time\t|Start time\t|End time\t|waiting                                     time\t|Turnaround time\n\n");
            while(over<n)
            {
                        count=0;
                        for(i=over;i<n;i++)
                        {
                                    if(at[i]<=time)
                                    count++;
                                    else
                                    break;
                        }
                        if(count>1)
                        {
                                    for(i=over;i<over+count-1;i++)
                                    {
                                                for(j=i+1;j<over+count;j++)
                                                {
                                                            if(bt[i]>bt[j])
                                                            {
                                                                        temp=at[i];
                                                                        at[i]=at[j];
                                                                        at[j]=temp;
                                                                        
                                                                        temp=bt[i];
                                                                        bt[i]=bt[j];
                                                                        bt[j]=temp;
                                                                        
                                                                        temp=pr[i];
                                                                        pr[i]=pr[j];
                                                                        pr[j]=temp;     
                                                            }
                                                }                     
                                    }
                        }
                        start=time;
                        time+=bt[over];
  printf("p[%d]\t|\t%d\t|\t%d\t|\t%d\t|\t%d\t|\t%d\t|\t%d\n",pr[over],at[over],bt[over],start,time,time-at[over]-bt[over],time-at[over]);
                        sum_wait+=time-at[over]-bt[over];
           sum_turnaround+=time-at[over];
                        over++;
            }
            avgwait=(float)sum_wait/(float)n;
            avgturn=(float)sum_turnaround/(float)n;
            printf("Average waiting time is %f\n",avgwait);
            printf("Average turnaround time is %f\n",avgturn);
            return 0;
}
