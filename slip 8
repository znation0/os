Q1)
#include<stdio.h>
int main()
{
int q[20],p[50],c=0,c1,d,f,i,j,k=0,n,r,t,b[20],c2[20];
printf("Enter no of pages:");
scanf("%d",&n);
printf("Enter the reference string:");
for(i=0;i<n;i++)
            scanf("%d",&p[i]);
printf("Enter no of frames:");
scanf("%d",&f);
q[k]=p[k];
printf("\n\t%d\n",q[k]);
c++;
k++;
for(i=1;i<n;i++)
            {
                        c1=0;
                        for(j=0;j<f;j++)
                        {
                                    if(p[i]!=q[j])
                                    c1++;
                        }
                        if(c1==f)
                        {
                                    c++;
                                    if(k<f)
                                    {
                                                q[k]=p[i];
                                                k++;
                                                for(j=0;j<k;j++)
                                                printf("\t%d",q[j]);
                                                printf("\n");
                                    }
                                    else
                                    {
                                                for(r=0;r<f;r++)
                                                {
                                                            c2[r]=0;
                                                            for(j=i-1;j<n;j--)
                                                            {
                                                            if(q[r]!=p[j])
                                                            c2[r]++;
                                                            else
                                                            break;
                                                }
                                    }
                                    for(r=0;r<f;r++)
                                     b[r]=c2[r];
                                    for(r=0;r<f;r++)
                                    {
                                                for(j=r;j<f;j++)
                                                {
                                                            if(b[r]<b[j])
                                                            {
                                                                        t=b[r];
                                                                        b[r]=b[j];
                                                                        b[j]=t;
                                                            }
                                                }
                                    }
                                    for(r=0;r<f;r++)
                                    {
                                                if(c2[r]==b[0])
                                                q[r]=p[i];
                                                printf("\t%d",q[r]);
                                    }
                                    printf("\n");
                        }
            }
}
printf("\nThe no of page faults is %d",c);
}

Q2)
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

#define MAX 100

void searchPattern(char *mode, char *filename, char *pattern) {
    FILE *fp = fopen(filename, "r");
    if (fp == NULL) {
        printf("File not found!\n");
        return;
    }
    char line[256];
    int lineNum = 0, count = 0, found = 0;
    while (fgets(line, sizeof(line), fp)) {
        lineNum++;
        char *pos = line;
        while ((pos = strstr(pos, pattern)) != NULL) {
            count++;
            found = 1;
            if (strcmp(mode, "f") == 0) {
                printf("First occurrence at line %d: %s", lineNum, line);
                fclose(fp);
                return;
            }
            pos += strlen(pattern);
        }
    }
    fclose(fp);
    if (strcmp(mode, "c") == 0)
        printf("Total occurrences: %d\n", count);
    if (!found)
        printf("Pattern not found.\n");
}

int main() {
    char input[MAX], *args[10];
    char *token;
    pid_t pid;
    while (1) {
        printf("myshell$ ");
        fgets(input, MAX, stdin);
        input[strlen(input) - 1] = '\0';
        if (strcmp(input, "exit") == 0)
            break;
        int i = 0;
        token = strtok(input, " ");
        while (token != NULL) {
            args[i++] = token;
            token = strtok(NULL, " ");
        }
        args[i] = NULL;
        if (args[0] == NULL)
            continue;
        if (strcmp(args[0], "search") == 0) {
            if (i == 4 && (strcmp(args[1], "f") == 0 || strcmp(args[1], "c") == 0))
                searchPattern(args[1], args[2], args[3]);
            else
                printf("Usage:\n search f filename pattern\n search c filename pattern\n");
            continue;
        }
        pid = fork();
        if (pid == 0) {
            if (execvp(args[0], args) == -1)
                perror("Command execution failed");
            exit(0);
        } else if (pid > 0)
            wait(NULL);
        else
            perror("Fork failed");
    }
    return 0;
}
