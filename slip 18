Q1)
#include<stdio.h>
int main()
{
int q[20],p[50],c=0,c1,d,f,i,j,k=0,n,r,t,b[20],c2[20];
printf("Enter no of pages:");
scanf("%d",&n);
printf("Enter the reference string:");
for(i=0;i<n;i++)
            scanf("%d",&p[i]);
printf("Enter no of frames:");
scanf("%d",&f);
q[k]=p[k];
printf("\n\t%d\n",q[k]);
c++;
k++;
for(i=1;i<n;i++)
            {
                        c1=0;
                        for(j=0;j<f;j++)
                        {
                                    if(p[i]!=q[j])
                                    c1++;
                        }
                        if(c1==f)
                        {
                                    c++;
                                    if(k<f)
                                    {
                                                q[k]=p[i];
                                                k++;
                                                for(j=0;j<k;j++)
                                                printf("\t%d",q[j]);
                                                printf("\n");
                                    }
                                    else
                                    {
                                                for(r=0;r<f;r++)
                                                {
                                                            c2[r]=0;
                                                            for(j=i-1;j<n;j--)
                                                            {
                                                            if(q[r]!=p[j])
                                                            c2[r]++;
                                                            else
                                                            break;
                                                }
                                    }
                                    for(r=0;r<f;r++)
                                     b[r]=c2[r];
                                    for(r=0;r<f;r++)
                                    {
                                                for(j=r;j<f;j++)
                                                {
                                                            if(b[r]<b[j])
                                                            {
                                                                        t=b[r];
                                                                        b[r]=b[j];
                                                                        b[j]=t;
                                                            }
                                                }
                                    }
                                    for(r=0;r<f;r++)
                                    {
                                                if(c2[r]==b[0])
                                                q[r]=p[i];
                                                printf("\t%d",q[r]);
                                    }
                                    printf("\n");
                        }
            }
}
printf("\nThe no of page faults is %d",c);
}



Q2)
#include<stdio.h>
void findWaitingTime(int processes[], int n, 
int bt[], int wt[]) 
{ 
wt[0] = 0; 
int i; 
for (i = 1; i < n ; i++ ){ 
wt[i] = bt[i-1] + wt[i-1] ; 
} 
} 
void findTurnAroundTime( int processes[], int n, 
int bt[], int wt[], int tat[]) 
{ 
int i; 
for ( i = 0; i < n ; i++) 
tat[i] = bt[i] + wt[i]; 
} 
void findavgTime( int processes[], int n, int bt[]) 
{ 
int wt[n], tat[n], total_wt = 0, total_tat = 0; 
findWaitingTime(processes, n, bt, wt); 
findTurnAroundTime(processes, n, bt, wt, tat); 
printf("Processes Burst time Waiting time Turn around time\n"); 
int i; 
for ( i=0; i<n; i++) 
{ 
total_wt = total_wt + wt[i]; 
total_tat = total_tat + tat[i]; 
printf(" %d ",(i+1)); 
printf(" %d ", bt[i] ); 

printf(" %d",wt[i] ); 
printf(" %d\n",tat[i] ); 
} 
int s=(float)total_wt / (float)n; 
int t=(float)total_tat / (float)n; 
printf("Average waiting time = %d",s); 
printf("\n"); 
printf("Average turn around time = %d ",t); 
} 
int main() 
{ 
int processes[] = { 1, 2, 3}; 
int n = sizeof processes / sizeof processes[0]; 
int burst_time[] = {10, 5, 8}; 
findavgTime(processes, n, burst_time); 
return 0; 
}
